"""
Django settings for nachopr project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from django.db.backends.signals import connection_created
from django.dispatch import receiver

if 'AZURE' in os.environ:
    print("Running on Azure")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tawj(49n0_32tx5l%&bufs^)!n1^-(%_$9bm^%*p4maxiwa#%y'

# SECURITY WARNING: don't run with debug turned on in production!
if 'AZURE' in os.environ or 'CAPROVER' in os.environ:
    DEBUG = False
else:
    DEBUG = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'whitenoise',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django_crontab',
    'django.contrib.humanize',
    'tailwind',
    'theme',
    #'django_cotton',
    'django_browser_reload',
    'core',
    'djstripe',
    'crispy_forms',
    'crispy_tailwind',
    'allauth_theme',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_browser_reload.middleware.BrowserReloadMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = 'nachopr.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'allauth_theme.context_processors.welcome_text',
            ],
        },
    },
]

WSGI_APPLICATION = 'nachopr.wsgi.application'

ASGI_APPLICATION = 'nachopr.asgi.application'

ALLOWED_HOSTS = [
    '0.0.0.0', '127.0.0.1', 'nachopr.apps.innermaps.org',
    'nachoapp-ekewd4f3gdbwcxcu.eastus-01.azurewebsites.net',
    'nachopr.com'
]

# Add CSRF trusted origins for your domains
CSRF_TRUSTED_ORIGINS = [
    'https://nachopr.apps.innermaps.org',
    'https://nachoapp-ekewd4f3gdbwcxcu.eastus-01.azurewebsites.net',
    'https://nachopr.com'
]

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DB_PATH = Path('/home/persistent/db.sqlite3') if os.environ.get('AZURE') else (
    Path('/persistent/db.sqlite3') if os.environ.get('CAPROVER') else BASE_DIR / 'db.sqlite3'
)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': DB_PATH,
        'OPTIONS': {
            'timeout': 20,
        }
    }
}

@receiver(connection_created)
def configure_sqlite(sender, connection, **kwargs):
    if connection.vendor == 'sqlite':
        cursor = connection.cursor()
        cursor.execute('PRAGMA journal_mode=WAL')
        cursor.execute('PRAGMA synchronous=NORMAL')
        cursor.execute('PRAGMA cache_size=-64000')  # 64MB
        cursor.execute('PRAGMA foreign_keys=ON')


STATIC_ROOT = BASE_DIR / 'static'
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = BASE_DIR / "staticfiles"


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]




# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Add these settings for whitenoise
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

TAILWIND_APP_NAME = 'theme'

INTERNAL_IPS = [
    "127.0.0.1",
]

#CRON_LOG_FILE = '/persistent/cron.log'

CRONJOBS = [
    ('*/10 * * * *', 'core.cron.crawl_job', '>> /tmp/cron.log 2>&1'),
    ('0 * * * *', 'core.cron.check_database_integrity', '>> /tmp/cron_db_check.log 2>&1'),
]

DJSTRIPE_FOREIGN_KEY_TO_FIELD = os.environ.get('DJSTRIPE_FOREIGN_KEY_TO_FIELD', 'djstripe_id')
if 'AZURE' in os.environ:
    print(f"DJ-Stripe foreign key field: {DJSTRIPE_FOREIGN_KEY_TO_FIELD}")

STRIPE_LIVE_SECRET_KEY = os.environ.get("STRIPE_LIVE_SECRET_KEY")
STRIPE_LIVE_MODE = os.environ.get("STRIPE_LIVE_MODE")
STRIPE_PRICING_TABLE_ID = "prctbl_1QKQJuIS7CEbPEJ1zlMmBQM1"

SLACK_WEBHOOK_URL = os.environ.get('SLACK_WEBHOOK_URL')

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"

DAT_WELCOME_TITLE = 'NachoPR'  # title
DAT_WELCOME_TITLE_MOBILE = 'NachoPR'  # mobile title
DAT_WELCOME_TEXT = 'NachoPR is a platform for finding relevant journalists for your PR campaigns.'  # text for your project
DAT_GOOGLE_ENABLE_ONETAP_LOGIN = True  # decide if you want to show the google one tap login
DAT_GOOGLE_CLIENT_ID = ''  # google client id , e.g. XXXXXXXXXX39-62ckbbeXXXXXXXXXXXXXXXXXXXXXm1.apps.googleusercontent.com
DAT_BASE_URL = ''  # e.g. http://localhost:8000
DAT_TOS_MESSAGE = 'By registering, you agree to our <a href="/terms-of-service/">Terms of Service</a> and <a href="/privacy-policy/">Privacy Policy.</a>'  # optional

LOGIN_REDIRECT_URL = '/dashboard/'
